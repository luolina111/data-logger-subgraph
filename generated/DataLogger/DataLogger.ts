// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class DataStored extends ethereum.Event {
  get params(): DataStored__Params {
    return new DataStored__Params(this);
  }
}

export class DataStored__Params {
  _event: DataStored;

  constructor(event: DataStored) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get data(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class DataLogger extends ethereum.SmartContract {
  static bind(address: Address): DataLogger {
    return new DataLogger("DataLogger", address);
  }
}

export class StoreDataCall extends ethereum.Call {
  get inputs(): StoreDataCall__Inputs {
    return new StoreDataCall__Inputs(this);
  }

  get outputs(): StoreDataCall__Outputs {
    return new StoreDataCall__Outputs(this);
  }
}

export class StoreDataCall__Inputs {
  _call: StoreDataCall;

  constructor(call: StoreDataCall) {
    this._call = call;
  }

  get _data(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class StoreDataCall__Outputs {
  _call: StoreDataCall;

  constructor(call: StoreDataCall) {
    this._call = call;
  }
}
